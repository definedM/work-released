
local RepStorage = game:GetService("ReplicatedStorage")
local EditRems = RepStorage:WaitForChild("Sockets")
local plrs = game:GetService("Players")
local LP = plrs.LocalPlayer
local LPGui = LP:WaitForChild("PlayerGui")
local HasVip = game:GetService("MarketplaceService"):UserOwnsGamePassAsync(LP.UserId, 3756285)
local Colors = {}

if not HasVip then 
	for i, v in pairs(LPGui:WaitForChild("MainGui"):WaitForChild("ScreenGui"):WaitForChild("Properties")) do
		table.insert(Colors, v.BackgroundColor)
	end
else
	Colors = nil
end

getgenv().blocklimit = 44 --donot set this over 50, but yu are free to chang it to wuteva
getgenv().blockqueue = 0

local function GetNearestColor(R, G, B)
	if typeof(R) == 'Color3' then
		R = R.R
		B = R.B
		G = R.G
	elseif typeof(R) == 'table' then
		R = R[1]
		B = R[2]
		G = R[3]
	end
	R = R/255
	B = B/255
	G = G/255
	if Colors then
		local BestColor, Difference
		for i = 1, #Colors do
			local colr = Colors[i]
			local newDiff = (colr.R - R)+(colr.B - B)+(colr.G - G) 
			if newDiff < Difference then
				Difference = newDiff
				BestColor = colr
			end
		end
		return BestColor.R, BestColor.G, BestColor.B
	else
		return R, G, B 
	end
end

local function UnNil(Value, Default)
	if Value and Value ~= nil then
		return Value
	end
	return Default
end

local function FindObjAtPos()

local BMod = {}

function BMod.WaitInQueue()
    while getgenv().blockqueue >= getgenv().blocklimit do
        task.wait(0.2)
    end
    getgenv.blockqueue += 1
    task.wait()
    return
end

function BMod.QueueOver()
	task.wait(1.1)
	getgenv().blockqueue -= 1
end

function BMod.place(x, y, z, propTable)
	BMod.WaitInQueue()

	spawn(function()
		local x, y, z = tostring(UnNil(x)), tostring(UnNil(y)), tostring(UnNil(z))
		local pos = x..' '..y..' '..z.."/16"
		local args = {
			[1] = pos,
			[2] = {
				["Reflectance"] = 0,
				["CanCollide"] = true,
				["Color"] = Color3.new(0,0,0),
				["LightColor"] = Color3.new(0,0,0),
				["Transparency"] = 0,
				["Light"] = 0,
				["Material"] = 1,
				["Shape"] = 1,
				["Size"] = 1
			}
		}
		if propTable and propTable ~= nil then 
			for i = 1, #propTable do
				args[2][propTable[i]] = propTable[i]
				
				if propTable[i] == 'Color' then
					GetNearestColor(propTable[i])
					args[2][propTable[i] = 
				end
			end
		end
		
	    EditRems.Place:InvokeServer(unpack(args))
		QueueOver()
	end)
end

function BMod:delete(Inst)
	WaitInQueue()
	spawn(function()
		EditRems.Delete:FireServer(Inst)
		QueueOver()
	end)
end

function BMod.ClearWorld()
	local S = Instance.new("ScreenGui", LP.PlayerGui)
	local F = Instance.new("Frame", S)
	local B = Instance.new("TextButton", F)
	B.Size = UDim2.new(1, 0, 1, 0)
	B.TextScaled = true
	B.Text = "Are you sure you want to clear the world? (if yes, click. if not, wait 5 seconds)"
	F.Position = UDim2.new(0.6, 0, 0.2, 0)
	F.Size = UDim2.new(0, 150, 0, 120)

	
	B.MouseButton1Click:Connect(function()
		for i, v in pairs(workspace.Blocks:GetChildren()) do
			delete(v)
		end
		S:Destroy()
		place()
	end)
	
	pcall(function()
		LP.Character.Humanoid.Died:Connect(function()
			S:Destroy()
			return
		end)
	end)
	
	task.wait(5)
	S:Destroy()
	return
end

function BMod:paint(ObjOrPos, propTable)
	local Obj = ObjOrPos
	if typeof(Obj) == 'Vector3' then
		Obj = ObjOFindObjAtPos(Obj)
	end
	
	--INCOMPLETE
end

return BMod
