--defin's skidding of enim skidded's versin of this lmao

local Plrs = game:GetService("Players")
local LP = Plrs.LocalPlayer
local DebrisServ = game:GetService("Debris")
local UIS = game:GetService("UserInputService")
local mouse = LP:GetMouse()
local Char = LP.Character
local plate = LP.RespawnLocation.Parent

local mobs = workspace.Mobs
local dogeGunFnc = LP.Backpack:FindFirstChild("Doge Gun") or LP.Character:FindFirstChild("Doge Gun")

if dogeGunFnc then dogeGunFnc = dogeGunFnc:WaitForChild("RemoteFunction") end
local WhitelistedMsgs = {"providence", "activated the", "votes to skip"} --it will whitelist mesages if it *contains* that string (not case sensitive but they must be *lowercase*)

local function GetPlayerTab() --return d strings
	local plrsTab = {}
	for i, plr in pairs(Plrs:GetChildren()) do
		plrsTab[i] = plr.Name
	end
	table.remove(plrsTab, table.find(plrsTab, LP.Name))
	return plrsTab
end
getgenv().stationTable = {} --for updating purposes
local tableOfStations = {}
for _, v in pairs(plate:GetChildren()) do
	if string.find(v.Name, "Station", 4) then--gold is smallest word
		tableOfStations[#tableOfStations + 1] = v
	end
end
getgenv().stationTable = tableOfStations

--a shid ton of toggles n stuff
local enableLoopKillMobs = false
local enableBuffGun = false
local enableBuffGunVisuals = false 
local enableBuffGunPlrDmg = false
local buffGunDmgMult = 1 
local buffGunFirerate = 0

local hideDecorations = false
local hideDecorationsIntensity = 0.95

local plrsToKill = {}

local function dogEnemy(Humanoid, repeatTillDead, freq)
	if not Humanoid then return end
    coroutine.wrap(function()
        pcall(function()
			if repeatTillDead then
				repeat
					task.wait()
					dogeGunFnc:InvokeServer("hit", {Humanoid, 'h'}) 
				until not Humanoid or Humanoid.Health == 0
			else
				dogeGunFnc:InvokeServer("hit", {Humanoid, 'h'}) 
			end
		end) 
		return
    end)()
end

local function ModifyDoggun(Char)
	local GetTool = Char.ChildAdded:Connect(function(Tool)
		print'tool quippd'
		if not enableBuffGun then return end
		if not Tool:IsA("Tool") or Tool.Name ~= "Doge Gun" then return end
		local bem = Instance.new("Part")
		bem.CastShadow = false
		bem.CanCollide = false
		bem.CanTouch = false
		bem.CanQuery = false
		bem.Anchored = true
		bem.Material = Enum.Material.Neon
		local firing = false
		
		local function Beam()
			print'beam active'
			repeat
				local targ = mouse.Target
				
				coroutine.wrap(function()
					if targ then
						local Model = targ.Parent
						local human = Model:FindFirstChildOfClass("Humanoid") 
						if not enableBuffGunPlrDmg then 
							if Plrs:GetPlayerFromCharacter(Model) then human = nil end
						end
						if human then
							for _ = 0, buffGunDmgMult do
								if human.Health == 0 then return end
								coroutine.wrap(function()) --wtfff corotin wrap in a corutin wrap??(i tikn this bad to do)
									dogEnemy(human)
								end)()
							end
						end
					end
					return
				end)()
				task.wait()
				coroutine.wrap(function()
					if enableBuffGunVisuals and bem then
						local bemC = bem:Clone()
						bemC.Color = Color3.new(math.random(0.3, 1), math.random(0.3, 1), math.random(0.3, 1))
						local hit, handlePos = mouse.Hit.Position, Tool:WaitForChild("Handle").Position
						local newPos = (handlePos + hit)*Vector3.new(0.5, 0.5, 0.5) + Vector3.new(math.random(0,0.3), math.random(0,0.3), math.random(0,0.3))
						bemC.CFrame = CFrame.lookAt(handlePos, newPos) --lookat so facking gay it wont let u just get the orientation
						bemC.Position = newPos
						bemC.Size = Vector3.new(0.8, 0.8, (hit-handlePos).Magnitude)
		
						DebrisServ:AddItem(bemC, 0.15)
						bemC.Parent = workspace.bullets
					end
				end)()
				task.wait(buffGunFirerate)
			until not firing
			return
		end
		
		local inptBegin = UIS.InputBegan:Connect(function(inptObj, typing)
			if typing or inptObj.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
			firing = true
			Beam()
		end)
		
		local inptEnd = UIS.InputEnded:Connect(function(inptObj)
			if inptObj.UserInputType == Enum.UserInputType.MouseButton1 then
				firing = false
			end
		end)
		Tool.Unequipped:Connect(function()
			Beam, firing = nil, false
			bem:Destroy()
			inptBegin:Disconnect()
			inptEnd:Disconnect()
			return
		end)
		return
	end)
	local CharRemoved
	CharRemoved = LP.CharacterRemoving:Connect(function()
		GetTool:Disconnect()
		CharRemoved:Disconnect()
		return
	end)
end

LP.CharacterAdded:Connect(function(newChar)
	local gunFnc
	Char = newChar
	repeat
		task.wait(0.3)
		gunFnc = LP.Backpack:FindFirstChild("Doge Gun") or newChar:FindFirstChild("Doge Gun")
	until gunFnc ~= nil
	
	dogeGunFnc = gunFnc:WaitForChild("RemoteFunction")
	ModifyDoggun(newChar)
	return
end)

local LoopEnableTool = Char.ChildAdded:Connect(function(obj)
	if not Char then return end
	if obj:IsA("Tool") then
		task.wait(0.1)
		repeat
			obj:Activate()
			task.wait(0.2)
		until not obj or not Char or obj.Parent ~= Char
	end
end)

local LoopDogeGunMobs = mobs.ChildAdded:Connect(function(mob)
    if not enableLoopKillMobs then return end
	--local part = mob:FindFirstChild("Head") or mob:FindFirstChildOfClass("Part")
	task.wait()
	local human = mob:WaitForChild("Humanoid") or nil
	if not human then return end

	coroutine.wrap(function()
		local alive = true     
        local checkalive = human.Died:Connect(function() alive = false end)

		while dogeGunFnc and alive and mob do
			task.wait(0.1)
            for _ = 1, buffGunDmgMult+2 do
			    dogEnemy(human)
            end
		end
        checkalive, alive = nil
		return
	end)()
end)

--comment the below if u do want those
LoopEnableTool:Disconnect()
LoopDogeGunMobs:Disconnect()
--BuffDogeGun:Disconnect()
ModifyDoggun(Char)

game:GetService("Workspace").Decoration.ChildAdded:Connect(function(obj)
    if not hideDecorations then return end
	obj.CanQuery = false
	obj.Transparency = obj.Transparency*DecorationsIntensity
end)

--[[
LP.PlayerGui.Chat.Frame.ChatChannelParentFrame["Frame_MessageLogDisplay"].Scroller.ChildAdded:Connect(function(Msg)
		local label = Msg:FindFirstChildOfClass("TextLabel") or nil
		if not label then return end
		
		local txt = label.Text:lower()
		if label.TextColor3 ~= Color3.new(1, 1, 0) then return end
		for _, str in pairs(WhitelistedMsgs) do
			if string.find(txt, str) then return end --make separat ui over the chat and only add wanted chat
		end --https://www.youtube.com/watch?v=PSTtYA4pg18
		Msg:Destroy()
end)
]]
--kavo UI down herer
local UILib = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local themes = {
	['dogumTheme'] = {
		SchemeColor = Color3.fromRGB(222, 180, 35),
		Background = Color3.fromRGB(235, 225, 160),
		Header = Color3.fromRGB(240, 210, 80),
		TextColor = Color3.fromRGB(48, 48, 48),
		ElementColor = Color3.fromRGB(255, 245, 165)
	}
	['PHdogumTheme'] = {
		SchemeColor = Color3.fromRGB(243, 148, 0),
		Background = Color3.fromRGB(0, 0, 0),
		Header = Color3.fromRGB(0, 0, 0),
		TextColor = Color3.fromRGB(243, 148, 0),
		ElementColor = Color3.fromRGB(243, 148, 0)
	}
}

local Window = UILib.CreateLib("Doge Gun", themes['PHdogumTheme'])
local Tab1 = Window:NewTab("Modifications")
local Tab2 = Window:NewTab("Miscellaneous")

local T1Sect1 = Tab1:NewSection("Modify your doge gun.")
local T1Sect2 = Tab1:NewSection("Change the visuals.")
T1Sect1:NewToggle("Toggle switch", "turn on or loser", function(IsOn)
	enableBuffGun = IsOn
end)

T1Sect1:NewToggle("the genocide button", "makes things yknow die", function(IsOn)
	enableBuffGunPlrDmg = IsOn
end)

T1Sect1:NewSlider("the speed", "more = better amiright", 50, 0, function(Value)
    buffGunFirerate = 1-Value*0.02
end)

T1Sect1:NewSlider("the damage", "more = better amiright", 98, 1, function(Value)
    buffGunDmgMult = Value
end)

T1Sect2:NewToggle("make lasers chad", "upgrades the lasers", function(IsOn)
    enableBuffGunVisuals = IsOn
end)

local T2Sect1 = Tab2:NewSection("the mass genocide")
local plrsList = T2Sect1:NewDropdown("add peopl to list", "click and they get loop dieded", GetPlayerTab(), function(plr)
	if not table.find(plrsToKill, plr) then
		table.insert(plrsToKill, plr)
	end
end)

local T2Sect2 = Tab2:NewSection("the unmass genocide")

local killPlrList = T2Sect2:NewDropdown("remov someon from list", "clic and they no mor lop die", plrsToKill, function(plr)
	table.remove(plrsToKill, plr)
	killPlrList:Refresh(plrsToKill)
end)

T2Sect2:NewButton("updat both lists", "it refres both lists", function()
	plrsList:Refresh(GetPlayerTab())
end)

local T2Sect3 = Tab2:NewSection("adjust decorations")
T2Sect3:NewToggle("enable hiding decoratins", "migt lag u mor by liek 1% if toggled on", function(IsOn)
	hideDecorations = IsOn
end)

T2Sect3:NewSlider("make decoration les annoying", "sets teh part transparencies to fully transparent at 100", 0, 100, function(Value)
	hideDecorationsIntensity = Value*0.01
end)

T2Sect4 = Tab2:NewSection("modify the UI")
T2Sect4:NewDropdown("Pick a UI to switch to", 'its in d name bro', themes, function(choice)
	for name, color in pairs(choice) do
		UILib:ChangeColor(name, color)
	end
end)


local i = 0

while task.wait(5) do
	print(i)
	i = i + 1
	Char = LP.Character or nil
	if not Char then return end
	local head = Char:FindFirstChild("Head")
	if head then
		if i%2 == 0 then
			tableOfStations = getgenv().stationTable
		else
			for i = 1, #tableOfStations do
				firetouchinterest(head, tableOfStations[i], 0)
				firetouchinterest(head, tableOfStations[i], 1)
				if i%3 == 0 then task.wait() end
			end
		end
	end
	local plrsKillng = #plrsToKill
	if plrsKillng ~= 0 then
		for i = 1, plrsKillng do
			dogEnemy(Plrs[plrsToKill[i]].Character:FindFirstChild("Humanoid"))
		end
	end
end

