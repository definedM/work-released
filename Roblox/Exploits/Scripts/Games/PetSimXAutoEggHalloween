
print"auto egging"
local remotes = workspace.__THINGS.__REMOTES
local plrs = game:GetService("Players")
local vu = game:GetService("VirtualUser")
local LP = plrs.LocalPlayer
local plrgui = LP.PlayerGui
local MainUi = plrgui:FindFirstChild("Main")
local petsUi = plrgui.Inventory.Frame.Main.Pets
local BoostTable = {}
local stop = false

local MainUi = LP.PlayerGui:FindFirstChild("Main")
local supr, ultra = 'Super Lucky', 'Ultra Lucky'
local boostrem

local function EndScript() 
    stop = true
end

local function CheckLucks()
    if not boostrem then
        remotes.MAIN:FireServer('a', 'activate boost')
        task.wait(1)
        boostrem = remotes['activate boost']
    end
    if not table.find(BoostTable, supr) or not table.find(BoostTable, ultra) then
        stop = true
    end
    table.clear(BoostTable)
end
for i, v in pairs(MainUi.Boosts:GetChildren()) do
    if v:IsA("Frame") then
        table.insert(BoostTable, v.Name)
    end
end
local function ToNumber(str)
    if typeof(str) ~= 'string' then warn'not a string' return nil end
    local NoCom = string.gsub(str, ',', '')
    local NoSpc = string.gsub(NoCom, '_', '')
    return tonumber(NoSpc)
end
game:GetService("ContextActionService"):BindAction('s', EndScript, true, Enum.KeyCode.H)

while task.wait() do
    remotes:FindFirstChild("buy egg"):InvokeServer({[1] = "Cursed Egg", [2] = false})
    task.wait(0.1)
    CheckLucks()
    if stop then break end
end

print("complete")
